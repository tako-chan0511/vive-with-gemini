{
  "version": 3,
  "sources": ["../../../../node_modules/vitepress-plugin-mermaid/dist/vitepress-plugin-mermaid.es.mjs"],
  "sourcesContent": ["const p = (e, i) => {\n  const a = e.renderer.rules.fence.bind(e.renderer.rules);\n  e.renderer.rules.fence = (s, t, n, r, d) => {\n    const l = s[t];\n    if (l.info.trim() === \"mermaid\")\n      try {\n        const m = t, o = (i == null ? void 0 : i.class) || \"mermaid\";\n        return `\n      <Suspense> \n      <template #default>\n      <Mermaid id=\"mermaid-${m}\" class=\"${o}\" graph=\"${encodeURIComponent(\n          l.content\n        )}\"></Mermaid>\n      </template>\n        <!-- loading state via #fallback slot -->\n        <template #fallback>\n          Loading...\n        </template>\n      </Suspense>`;\n      } catch (m) {\n        return `<pre>${m}</pre>`;\n      }\n    return l.info.trim() === \"mmd\" && (s[t].info = \"mermaid\"), a(s, t, n, r, d);\n  };\n}, u = {\n  //We set loose as default here because is needed to load images\n  securityLevel: \"loose\",\n  startOnLoad: !1\n};\nfunction v(e) {\n  const i = {\n    ...u,\n    ...e\n  }, a = \"virtual:mermaid-config\", s = \"\\0\" + a;\n  return {\n    name: \"vite-plugin-mermaid\",\n    enforce: \"post\",\n    transform(t, n) {\n      if (n.includes(\"vitepress/dist/client/app/index.js\")) {\n        t = `\nimport Mermaid from 'vitepress-plugin-mermaid/Mermaid.vue';\n` + t;\n        const r = t.split(`\n`), d = r.findIndex(\n          (l) => l.includes(\"app.component\")\n        );\n        return r.splice(\n          d,\n          0,\n          '  app.component(\"Mermaid\", Mermaid);'\n        ), t = r.join(`\n`), {\n          code: t,\n          map: null\n          // provide source map if available\n        };\n      }\n    },\n    async resolveId(t) {\n      if (t === a)\n        return s;\n    },\n    async load(t) {\n      if (t === s)\n        return `export default ${JSON.stringify(i)};`;\n    }\n  };\n}\nconst c = (e) => {\n  e.markdown || (e.markdown = {});\n  const i = e.markdown.config || (() => {\n  });\n  e.markdown.config = (...s) => {\n    p(...s, e.mermaidPlugin), i(...s);\n  }, e.vite || (e.vite = {}), e.vite.plugins || (e.vite.plugins = []), e.vite.plugins.push(v(e.mermaid)), e.vite.optimizeDeps || (e.vite.optimizeDeps = {}), e.vite.optimizeDeps.include || (e.vite.optimizeDeps.include = []), e.vite.optimizeDeps.include = [\n    ...e.vite.optimizeDeps.include,\n    \"@braintree/sanitize-url\",\n    \"dayjs\",\n    \"debug\",\n    \"cytoscape-cose-bilkent\",\n    \"cytoscape\"\n  ], e.vite.resolve || (e.vite.resolve = {});\n  const a = {\n    \"dayjs/plugin/advancedFormat.js\": \"dayjs/esm/plugin/advancedFormat\",\n    \"dayjs/plugin/customParseFormat.js\": \"dayjs/esm/plugin/customParseFormat\",\n    \"dayjs/plugin/isoWeek.js\": \"dayjs/esm/plugin/isoWeek\",\n    \"cytoscape/dist/cytoscape.umd.js\": \"cytoscape/dist/cytoscape.esm.js\"\n  };\n  return e.vite.resolve.alias ? Array.isArray(e.vite.resolve.alias) ? e.vite.resolve.alias = [\n    ...e.vite.resolve.alias,\n    ...Object.entries(a).map(([s, t]) => ({\n      find: s,\n      replacement: t\n    }))\n  ] : e.vite.resolve.alias = {\n    ...e.vite.resolve.alias,\n    ...a\n  } : e.vite.resolve.alias = a, e;\n};\nexport {\n  p as MermaidMarkdown,\n  v as MermaidPlugin,\n  c as withMermaid\n};\n"],
  "mappings": "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",
  "names": []
}
